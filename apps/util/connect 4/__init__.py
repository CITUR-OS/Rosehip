from selenium import webdriver;import chromedriver_autoinstaller;chromedriver_autoinstaller.install();from selenium.webdriver.support.wait import WebDriverWait;from selenium.webdriver.common.by import By;from selenium.webdriver.support import expected_conditions;op=webdriver.ChromeOptions();op.add_argument('headless');brow=webdriver.Chrome(options=op);Z=''.join([chr(ord(i)-1) for i in 'iuuqt;00dpoofdu5/hbnftpmwfs/psh0@qpt>']);c=([' ']*7+['\n'])*6;import sys;import io;import os;os.environ['PYGAME_HIDE_SUPPORT_PROMPT'] = "hide";import pygame;from io import StringIO;pygame.init();pygame.display.set_caption('connect 4');font = pygame.font.Font(None, 32);clock = pygame.time.Clock();input_box = pygame.Rect(100, 100, 140, 32);out_box=pygame.Rect(100,200, 140, 32);from pygame_gui.elements import UIWindow;from pygame_gui.elements import UITextBox;from pygame_gui.elements import UITextEntryLine;from pygame_gui.elements import UITextBox;import pygame_gui;import concurrent.futures
def board(x:str):
	global c
	if len(x)!=1:c[47-8*x[:-1].count(x[-2])+int(x[-2])]='P'
	c[47-8*x.count(x[-1])+int(x[-1])]='C';return (''.join(c)+'1234567\nchoose column (1-7)').replace('\n','<br>')
class connect(UIWindow):
    def __init__(self, pos, manager):self.text='4';super().__init__(pygame.Rect(pos, (400, 300)), manager, window_display_title="connect 4", object_id="#connect",resizable=True);self.textbox = pygame_gui.elements.UITextBox(board(self.text),relative_rect=pygame.Rect(0, 0, 368, 200),manager=manager,container=self,anchors={"left": "left","right": "right","top": "top","bottom": "bottom",},);self.input = pygame_gui.elements.UITextEntryLine(relative_rect=pygame.Rect(0, -35, 368, 30),manager=manager,container=self,anchors={"left": "left","right": "right","top": "bottom","bottom": "bottom",},);self.manager=manager;self.input.focus()
    def process_event(self, event):
        super().process_event(event)
        if event.type == pygame.KEYUP and event.key == pygame.K_RETURN and len(self.input.get_text())==1:self.text+=self.input.get_text();brow.get(Z+self.text);brow.find_element_by_id('hide_solution_link').click();WebDriverWait(brow,10**4).until_not(expected_conditions.element_to_be_clickable((By.ID,'hide_solution_link')));t=[int(brow.find_element_by_id('sol'+str(i)).text) for i in range(7)];self.text+=str(t.index(max(t))+1);self.input.kill();self.textbox.kill();self.textbox = pygame_gui.elements.UITextBox(board(self.text),relative_rect=pygame.Rect(0, 0, 368, 200),manager=self.manager,container=self,anchors={"left": "left","right": "right","top": "top","bottom": "bottom",},);self.input = pygame_gui.elements.UITextEntryLine(relative_rect=pygame.Rect(0, -35, 368, 30),manager=self.manager,container=self,anchors={"left": "left","right": "right","top": "bottom","bottom": "bottom",},);self.input.focus()
        elif event.type == pygame.KEYUP and event.key == pygame.K_RETURN:self.textbox.kill();self.textbox = pygame_gui.elements.UITextBox(board(self.text)+'\nthis is not valid',relative_rect=pygame.Rect(0, 0, 368, 200),manager=self.manager,container=self,anchors={"left": "left","right": "right","top": "top","bottom": "bottom",},)
def load(manager, params):
    pos = (100, 100)
    if params is not None and len(params) > 0:pos = params[0]
    connect(pos, manager)
